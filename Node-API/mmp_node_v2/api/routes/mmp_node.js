'use strict';
var schema = require('../models/auth');
// var mongoose = require('mongoose');
var url = 'mongodb://127.0.0.1';
var cors = require('cors');
const mongoose = require('mongoose');
mongoose.Promise = Promise;
mongoose.connect(url);
console.log('Mongoose is connected')
 


module.exports = function(app) {
  var db = require('../controllers/dbConn');
  var trigger = require('../controllers/triggerPostAndroid')
  var user = require('../controllers/userController')
  var triggerIOS= require('../controllers/triggerPostIOS')
  var file = require('../controllers/fileHandleController')
  var fle = require('../controllers/network')
  var monitor = require('../controllers/monitoringController')
  
  app.use(cors())
app.route('/api/deleteUser')
    .post(user.deleteUser)
  app.route('/api/isTokenValid')
   .get(user.isTokenValid)
app.route('/api/uploadFile')
   .post(file.uploadFile)
app.route('/api/listFiles')
    .post(file.listFiles)
app.route('/api/createUserFolderOnLogin')
    .post(file.createUserFolderOnLogin)
app.route('/api/getHomePageDetails')
    .post(db.getHomePageDetails)
app.route('/api/getAppScriptDetails')
    .post(db.getAppScriptDetails)
app.route('/api/getAndroidDeviceId')
   .get(trigger.getAndroidDeviceId)
app.route('/api/getiOSDeviceId')
   .get(triggerIOS.getiOSDeviceId)
app.route('/api/installIPA')
   .post(triggerIOS.installIPA)
app.route('/api/getApkPackages')
   .get(trigger.getApkPackages)
app.route('/api/getInstallAPK')
   .post(trigger.getInstallAPK)
app.route('/api/executeADBCommands')
   .post(trigger.executeADBCommands)
app.route('/api/tapAndroidView')
   .get(trigger.tapAndroidView)
app.route('/api/updateDeviceData')
    .post(db.updateDeviceData)
app.route('/api/swipeUp')
   .post(trigger.swipeUp)
app.route('/api/swipeDown')
   .post(trigger.swipeDown)
app.route('/api/swipeLeft')
   .post(trigger.swipeLeft)
app.route('/api/swipeRight')
   .post(trigger.swipeRight)
app.route('/api/register')
   .post(user.register)
app.route('/api/signIn')
   .post(user.signIn)
app.route('/api/loginRequired')
    .post(user.loginRequired)
// app.route('/api/bookDevice')
//     .post(db.bookDevice)
// app.route('/api/getUserBookedSlots')
//     .post(db.getUserBookedSlots)
// app.route('/api/getSystemIP')
//     .post(fle.getSystemIP)
app.route('/api/connectToLiveView')
    .post(fle.connectToLiveView)
// app.route('/api/getIOSDeviceIP')
//     .post(fle.getIOSDeviceIP)
app.route('/api/initiateMonitoring')
    .post(monitor.initiateMonitoring)
app.route('/api/copyTestReport')
    .get(monitor.copyTestReport)
app.route('/api/insertTestData')
    .post(db.insertTestData)
app.route('/api/getAppSpecificDevices')
    .get(db.getAppSpecificDevices)
app.route('/api/updateTestData')
.post(db.updateTestData)
app.route('/api/stopMonitoring')
    .post(monitor.stopMonitoring)
app.route('/api/runCalabashTest')
    .post(file.runCalabashTest)
app.route('/api/tailCalabashLogData')
    .get(fle.tailCalabashLogData)
app.route('/api/tailMonitoringLogData')
    .get(fle.tailMonitoringLogData)
app.route('/api/uploadTestScript')
    .post(file.uploadTestScript)
app.route('/api/getMyAppsDetails')
    .post(db.getMyAppsDetails)
app.route('/api/getAllLiveMonitoringData')
    .get(db.getAllLiveMonitoringData)
app.route('/api/getAppCycleData')
    .post(db.getAppCycleData)

app.route('/api/getAppInfo')
.post(db.getAppInfo)
app.route('/api/getCycleTestData')
.post(db.getCycleTestData)

app.route('/api/getTotalDevices')
.get(db.getTotalDevices)
app.route('/api/deleteApp')
    .post(file.deleteApp)
app.route('/api/deleteTestData')
    .post(db.deleteTestData)
app.route('/api/appBenchMarkData')
    .post(db.appBenchMarkData)
app.route('/api/initiateMonitoringWithExistingCycleID')
    .post(monitor.initiateMonitoringWithExistingCycleID)
app.route('/api/downloadMonitoringLogs')
    .get(fle.downloadMonitoringLogs)
    app.route('/api/runAppiumJarFile')
    .post(file.runAppiumJarFile)
app.route('/api/getAggregatedCycleData')
    .post(db.getAggregatedCycleData)
app.route('/api/getCalabashDoneFlag')
    .post(file.getCalabashDoneFlag)
app.route('/api/getAppTestDataComparision')
    .post(db.getAppTestDataComparision)
app.route('/api/getAppCycleDataWithAppID')
    .post(db.getAppCycleDataWithAppID)
app.route('/api/getCycleBasedComparisonData')
    .post(db.getCycleBasedComparisonData)
app.route('/api/testController')
    .post(monitor.testController)
app.route('/api/deleteCustomTestScripts')
    .post(file.deleteCustomTestScripts)
};